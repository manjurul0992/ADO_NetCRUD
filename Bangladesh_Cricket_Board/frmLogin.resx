<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Axmyx8puaT6UAAAAAElFTkSuQmCC
</value>
  </data>
</root>